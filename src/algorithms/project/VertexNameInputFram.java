/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package algorithms.project;

import edu.uci.ics.jung.graph.SparseGraph;
import java.util.Vector;
import javax.swing.JOptionPane;

/**
 *
 * @author Home
 */
public class VertexNameInputFram extends javax.swing.JFrame {

    /**
     * Creates new form GtaphInput
     */
    public VertexNameInputFram() {
        initComponents();
       // vn = MainFram.verticesNumber;
        setLocationRelativeTo(null);

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        vertexNametx = new javax.swing.JTextField();
        addVertex = new javax.swing.JButton();
        finish = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Lucida Calligraphy", 1, 18)); // NOI18N
        jLabel1.setText("Enter name of vertex 1");

        vertexNametx.setFont(new java.awt.Font("Lucida Calligraphy", 1, 18)); // NOI18N
        vertexNametx.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                vertexNametxActionPerformed(evt);
            }
        });

        addVertex.setFont(new java.awt.Font("Lucida Calligraphy", 1, 14)); // NOI18N
        addVertex.setText("Add Vertex");
        addVertex.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addVertexActionPerformed(evt);
            }
        });

        finish.setFont(new java.awt.Font("Lucida Calligraphy", 1, 14)); // NOI18N
        finish.setText("Finish");
        finish.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                finishActionPerformed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Lucida Calligraphy", 1, 15)); // NOI18N
        jLabel3.setText("After Add All Edges Press Finish");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap(65, Short.MAX_VALUE)
                        .addComponent(jLabel3))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(40, 40, 40)
                        .addComponent(addVertex)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(finish, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(64, 64, 64))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 261, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(71, 71, 71)
                        .addComponent(vertexNametx, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(79, 79, 79))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(12, 12, 12)
                .addComponent(vertexNametx, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 28, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(finish, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(addVertex, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(26, 26, 26))
        );

        layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {addVertex, jLabel1, vertexNametx});

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void vertexNametxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_vertexNametxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_vertexNametxActionPerformed

    private void addVertexActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addVertexActionPerformed
        // TODO add your handling code here:
            if(!vertices.contains(vertexNametx.getText())){
                //if(vn != 0){
                    vertices.add(vertexNametx.getText());
                    vertexNametx.setText("");
               // }

                //vn--;
               // if(vn == 0){
//                    EdgeInputFram EIF = new EdgeInputFram();
//                    EIF.setVisible(true);         
//                    super.setVisible(false);


              //  }
                counter++;
                jLabel1.setText("Enter name of vertex "+ counter);
                }
            else{
                JOptionPane.showMessageDialog(this, "You must enter name not exist here\n "+ vertices,  
           "ERROR", JOptionPane.ERROR_MESSAGE); 

            }
        
    }//GEN-LAST:event_addVertexActionPerformed

    private void finishActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_finishActionPerformed
        // TODO add your handling code here:
        g = new Graph(vertices);
        EdgeInputFram EIF = new EdgeInputFram();
        EIF.setVisible(true);         
        super.setVisible(false);
    }//GEN-LAST:event_finishActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
       

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new VertexNameInputFram().setVisible(true);
               
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addVertex;
    private javax.swing.JButton finish;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JTextField vertexNametx;
    // End of variables declaration//GEN-END:variables
    public String vertixName;
    public int vn;
    public int vnVer = 0 ;
    public int counter = 1;
    public static SparseGraph<String, String> unDirectedGraph = new SparseGraph<String, String>();
    public static Graph g;
    public Vector <String> vertices = new Vector<>();

}
